class {

    function getAllBooks( string parm = "" ) {

        return queryExecute("SELECT * from books b
                INNER JOIN publishers p
                ON b.publisherId=p.id
                WHERE b.title LIKE :searchTermLike
                OR b.isbn13 LIKE :searchTerm
                OR p.id = :searchTerm            
                OR p.name LIKE :searchTermLike
            ",
        {
         searchTermLike : '%#arguments.parm#%',
         searchTerm : '#arguments.parm#'
        });

    }

    function getBookByISBN13( required string ISBN13){
        return queryExecute("SELECT * FROM books where ISBN13=:ISBN13",{ISBN13:arguments.ISBN13});
    }

    function saveBook( required string ISBN13 = "",
        required string title = "", 
        string ISBN = "",
        numeric weight = 0,
        string binding = "", 
        numeric pages = 0,
        numeric publisherId = 0,
        string language = "",
        string description,
        string image) {

        queryExecute("
            INSERT into books (ISBN13, title, ISBN, weight, binding, pages, publisherId, language, description, image) 
            VALUES (:ISBN13,:title, :ISBN, :weight, :binding, :pages, :publisherId, :language, :description, :image) 
            ON DUPLICATE KEY UPDATE 
                ISBN13=:ISBN13,
                title=:title,
                ISBN=:ISBN,
                weight=:weight,
                binding=:binding,
                pages=:pages,
                publisherId=:publisherId,
                language=:language,
                description=:description,
                image=:image
        ",{
            ISBN13: arguments.ISBN13,
            title: arguments.title,
            ISBN: arguments.ISBN,
            weight: arguments.weight,
            binding: arguments.binding,
            pages: arguments.pages,
            publisherId: arguments.publisherId,
            language: arguments.language,
            description: arguments.description,
            image: arguments.image
        });

    }   
    
    function getAllPublishers() {
       
        return queryExecute("SELECT * FROM publishers");
    }

    function getAllGenres() {
        return queryExecute("SELECT * FROM genres");
    }

    function saveGenreToBook( required numeric genreId = 0,
        required string ISBN13 = "") {

        queryExecute("
            INSERT INTO genresToBooks (genreId, ISBN13) 
            VALUES (:genreId, :ISBN13) 
            ON DUPLICATE KEY UPDATE 
                genreId=:genreId,
                ISBN13=:ISBN13
        ",{
            genreId: arguments.genreId,
            ISBN13: arguments.ISBN13
        });

    }   

    function clearAllBookGenres( string ISBN13 = "") {
        return queryExecute("DELETE FROM genresToBooks WHERE ISBN13=:ISBN13",{ISBN13:arguments.ISBN13});
    }

    function getAllGenresForBook(genreId=0, ISBN13=''){
        var ourSQL = "SELECT * FROM books b 
            INNER JOIN genresToBooks gtb ON b.ISBN13 = gtb.ISBN13
            INNER JOIN genres g on gtb.genreId = g.genreId";
        if(arguments.genreId > 0){
           ourSQL = ourSQL & " WHERE gtb.genreId = #arguments.genreId#";
        }
        if(arguments.ISBN13.len() > 0){
           ourSQL = ourSQL & " WHERE gtb.ISBN13 = '#arguments.ISBN13#'";
        }
    } 

    function distinctGenres(){
        return queryExecute("SELECT DISTINCT g.genreId, g.genreName FROM genresToBooks gtb 
             INNER JOIN genres g ON g.genreId = gtb.genreId ORDER BY g.genreName");
    }


    // DO NOT USE.
    // This code doesn't seem to be working correctly but I can't figure out why
    function uploadFile(  ){
        var uploadedFile = request.file.uploadImage;  // Access file

        if ( !uploadedFile.isEmpty() ) {
            var savePath = expandPath( "/bookstore/common/images/" & uploadedFile.getName() );
            uploadedFile.write( savePath );
        }

        return {"File uploaded successfully!"};



        var uploadPath = expandPath( "/bookstore/common/images/" );

        // Perform file upload
        var result = fileUpload( uploadPath, "uploadImage" );

        if ( !result.success ) {
            return { error: "File upload failed: " & result.error };
        }

        return { success: true, filePath: result.filePath };        

        /* return fileUpload(expandPath("/bookstore/common/images/"), fileField,"*","makeUnique"); */
        return fileUpload(expandPath("/bookstore/common/images/"), "uploadImage","*","makeUnique"); 
     }
}